@{
    ViewBag.Title = "Информация о заказе #"+Model.OrderNumberOrID;
    if (Model.Marks.Any())
    {
        ViewBag.Title += ", оценка заказа - " + Model.OrderMark.Total;
    }
    Layout = "~/Views/Shared/MainPage.cshtml";
    var helper = new PermissionHelper();
    var currentUser = ((BaseController)ViewContext.Controller).CurrentUser ?? new User() { ID = 0 };
}
@section scripts{
    <script src="/Content/js/jquery.unobtrusive-ajax.min.js"></script>
    <script src="/Content/assets/advanced-datatable/media/js/jquery.dataTables_min.js"></script>
    <script src="/Content/assets/data-tables/DT_bootstrap.js"></script>
    <script src="/Content/assets/data-tables/dataTables.colReorder.js"></script>
    <script src="/Content/assets/data-tables/dataTables.colVis.js"></script>
    <script src="/Content/assets/data-tables/jquery.dataTables.columnFilter.js"></script>
    <script src="/Content/js/dtextend.js"></script>
    <script src="/Content/js/common.js"></script>

    <script type="text/javascript">
        $().ready(function () {
            initOrders();
        });

        function initOrders() {
            initDataTableHelper();
        }
    </script>
}
@model Order
@if (Model.Status != -10)
{
    <div class="row">
        <div class="col-lg-12">
            <section class="panel">
                <div class="panel-body">
                    <div class="form-group">
                        @if (helper.HasPermission(Permissions.OrderEdit) || (helper.HasPermission(Permissions.OrderAdd) && Model.AddedByID == currentUser.ID && Model.Status == -1))
                        {
                            if (currentUser.ShopOwnerID == Model.Shop.Owner && (currentUser.UserRoles.Contains("ShopOwner") || currentUser.UserRoles.Contains("Manager")) || Model.ContractedOrders.Any(x => x.Contractor.UserBy == currentUser.ShopOwnerID && x.Contractor.AccessRight == 1))
                            {
                                <a href="@Url.Action("CreateOrder", "Shop", new {ID = Model.ID})" class="btn btn-success" style="padding-right: 20px">Редактировать заказ</a>
                            }
                        }
                        @if (helper.HasPermission(Permissions.OrderDelete))
                        {
                            if (currentUser.ShopOwnerID == Model.Shop.Owner && (currentUser.UserRoles.Contains("ShopOwner") || currentUser.UserRoles.Contains("Manager")) )
                            {
                                <a href="@Url.Action("DeleteOrder", "Shop", new {ID = Model.ID})" class="btn btn-danger">Удалить заказ</a>
                            }
                        }
                        <br />
                    </div>
                </div>
            </section>
        </div>
    </div>
}
@if (currentUser.UserRoles.Contains("Operator") ||
     (currentUser.ShopOwnerID == Model.Shop.Owner && (currentUser.UserRoles.Contains("ShopOwner") || currentUser.UserRoles.Contains("Manager")))
    || Model.ContractedOrders.Any(x=> x.Contractor.UserBy == currentUser.ShopOwnerID))
{

    <div class="row">
        <input type="hidden" id="OrderID" value="@(Model.ID)" />
        @Html.Action("ProductsList", new {SkipDel = true})
    </div>
    <div class="row">
        @Html.Action("UserFormView")
        @if (Model.Marks.Any())
        {
            @Html.Action("MarkForm", new {id = Model.ID})
        }
    </div>
}